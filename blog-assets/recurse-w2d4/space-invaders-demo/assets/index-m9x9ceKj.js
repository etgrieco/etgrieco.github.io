import{r as Mt,g as Pt}from"./p5-DCs4u8N4.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function s(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(r){if(r.ep)return;r.ep=!0;const n=s(r);fetch(r.href,n)}})();var At=Mt();const qt=Pt(At);function _t(t){return{introTextBoundary:{posY:t.textSize()},introTextPos:{posX:0,posY:t.height/2},pressToStartFill:{alpha:0,deltaVec:1},pressToStartPos:{posX:0,posY:t.height/2+t.textSize()}}}function Ft(t,e){const s=t.frameRate()*t.deltaTime*.001;return e.introTextPos.posY<=e.introTextBoundary.posY?t.frameCount%5===0&&(e.pressToStartFill.alpha<=.5?e.pressToStartFill.deltaVec=1:e.pressToStartFill.alpha>=1&&(e.pressToStartFill.deltaVec=-1),e.pressToStartFill.alpha+=e.pressToStartFill.deltaVec*.1):(e.introTextPos.posY-=s,e.pressToStartPos.posY-=s),e}function Rt(t,e){const s={state:_t(t),tick(){return this.state=Ft(t,this.state),this.state}};s.tick=s.tick.bind(s);const i=new AbortController;document.addEventListener("keydown",function(n){n.code==="KeyS"&&(r(),e(s.state))},{signal:i.signal});function r(){i.abort()}return s}function Wt(t,e){t.push(),t.textAlign("center","bottom"),t.fill([178,222,39,255]),t.text("Welcome to Space Invaders!",e.introTextPos.posX,e.introTextPos.posY),t.pop(),t.push(),t.textAlign("center","bottom"),t.fill([178,222,39,e.pressToStartFill.alpha*255]),t.text("(press S to start)",e.pressToStartPos.posX,e.pressToStartPos.posY),t.pop()}var Yt=Object.defineProperty,mt=t=>{throw TypeError(t)},Ot=(t,e,s)=>e in t?Yt(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s,w=(t,e,s)=>Ot(t,typeof e!="symbol"?e+"":e,s),vt=(t,e,s)=>e.has(t)||mt("Cannot "+s),v=(t,e,s)=>(vt(t,e,"read from private field"),s?s.call(t):e.get(t)),X=(t,e,s)=>e.has(t)?mt("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,s),J=(t,e,s,i)=>(vt(t,e,"write to private field"),e.set(t,s),s),dt=(t,e,s,i)=>({set _(r){J(t,e,r)},get _(){return v(t,e,i)}}),u=Symbol("internal"),nt=4,Tt=8,St=20,Vt=(1<<nt)-1,Z=(1<<Tt)-1,j=(1<<St)-1,B=St,P=B+Tt;function Nt(t,e,s){return(t&Vt)<<P|(e&Z)<<B|s&j}var I=t=>t&j,Lt=t=>t>>>P,ut=t=>t>>>B&Z,Xt=t=>t&-267386881|((t>>>B&Z)+1&Z)<<B,Bt=t=>{const e=t[u];e.bitflag*=2,e.bitflag>=2**31&&(e.bitflag=1,e.entityMasks.push(new Array))},Qt=class{constructor(t,e){w(this,"generationId"),w(this,"bitflag"),w(this,"trait"),w(this,"store"),w(this,"queries"),w(this,"notQueries"),w(this,"schema"),w(this,"changedSubscriptions");const s=t[u],i=e[u];this.generationId=s.entityMasks.length-1,this.bitflag=s.bitflag,this.trait=e,this.store=i.createStore(),this.queries=new Set,this.notQueries=new Set,this.schema=e.schema,this.changedSubscriptions=new Set,i.stores[t.id]=this.store}};function Ht(t){const s=Object.keys(t).map(r=>`if ('${r}' in value) store.${r}[index] = value.${r};`).join(`
    `);return new Function("index","store","value",`
		${s}
	  `)}function $t(t){const s=Object.keys(t).map(r=>`store.${r}[index] = value.${r};`).join(`
    `);return new Function("index","store","value",`
		${s}
	  `)}function jt(t){const s=Object.keys(t).map(r=>`if (store.${r}[index] !== value.${r}) {
            store.${r}[index] = value.${r};
            changed = true;
        }`).join(`
    `);return new Function("index","store","value",`
        let changed = false;
        ${s}
        return changed;
        `)}function Gt(t){const s=`{ ${Object.keys(t).map(r=>`${r}: store.${r}[index]`).join(", ")} }`;return new Function("index","store",`
        return ${s};
        `)}function wt(t){return(e,s,i)=>{s[e]=i}}function zt(t){return(e,s,i)=>{let r=!1;return i!==s[e]&&(s[e]=i,r=!0),r}}function Kt(t){return(e,s)=>s[e]}var Ut={soa:Ht,aos:wt},Jt={soa:$t,aos:wt},Zt={soa:jt,aos:zt},te={soa:Gt,aos:Kt};function ee(t){if(typeof t=="function")return[];{const e={};for(const s in t)e[s]=[];return e}}var se=0;function re(t={}){const e=typeof t=="function",s=e?"aos":"soa",i=Object.assign(function(r){return[i,r]},{schema:t,[u]:{set:Ut[s](t),fastSet:Jt[s](t),fastSetWithChangeDetection:Zt[s](t),get:te[s](t),stores:[],id:se++,createStore:()=>ee(t),isPairTrait:!1,relation:null,pairTarget:null,isTag:!e&&Object.keys(t).length===0,type:s}});return i}var D=re;function Q(t,e){const s=t[u],i=new Qt(t,e);s.traitData.set(e,i),t.traits.add(e),Bt(t)}function ie(t,e,...s){const i=t[u];for(let r=0;r<s.length;r++){let n,o;if(Array.isArray(s[r])?[n,o]=s[r]:n=s[r],e.has(n))return;const a=n[u];i.traitData.has(n)||Q(t,n);const l=i.traitData.get(n),{generationId:h,bitflag:g,queries:T}=l,y=I(e);i.entityMasks[h][y]|=g;for(const d of i.dirtyMasks.values())d[h]||(d[h]=[]),d[h][y]|=g;for(const d of T)d.toRemove.remove(e),d.check(t,e,{type:"add",traitData:l})?d.add(e):d.remove(t,e);i.entityTraits.get(e).add(n);const c=a.relation,f=a.pairTarget;if(a.isPairTrait&&c!==null&&f!==null&&(i.relationTargetEntities.add(f),e.add(H(M,f)),e.add(H(c,M)),c[u].exclusive===!0&&f!==M)){const d=tt(t,c,e)[0];d!=null&&d!==f&&O(t,e,c(d))}if(a.type==="soa"){const d={};for(const S in l.schema)typeof l.schema[S]=="function"?d[S]=l.schema[S]():d[S]=l.schema[S];e.set(n,{...d,...o},!1)}else{const d=o??l.schema();e.set(n,d,!1)}}}function O(t,e,...s){const i=t[u];for(let r=0;r<s.length;r++){const n=s[r],o=n[u];if(!e.has(n))return;const a=i.traitData.get(n),{generationId:l,bitflag:h,queries:g}=a,T=I(e);i.entityMasks[l][T]&=~h;for(const y of i.dirtyMasks.values())y[l][T]|=h;for(const y of g)y.check(t,e,{type:"remove",traitData:a})?y.add(e):y.remove(t,e);if(i.entityTraits.get(e).delete(n),o.isPairTrait){t.query(M(e)).length===0&&i.relationTargetEntities.delete(e);const y=o.pairTarget;O(t,e,H(M,y));const c=o.relation;tt(t,c,e).length===0&&O(t,e,H(c,M))}}}function ne(t,e,s){const i=t[u],r=i.traitData.get(s);if(!r)return!1;const{generationId:n,bitflag:o}=r,a=I(e);return(i.entityMasks[n][a]&o)===o}function ht(t,e){return t[u].traitData.get(e).store}function kt(t){const e=new Map,s=()=>D((t==null?void 0:t.store)??{});function i(r){if(r===void 0)throw Error("Relation target is undefined");return r==="*"&&(r=M),bt(i,s,e,r)}return Object.assign(i,{[u]:{pairsMap:e,createTrait:s,exclusive:(t==null?void 0:t.exclusive)??!1,autoRemoveTarget:(t==null?void 0:t.autoRemoveTarget)??!1}})}var oe=kt;function bt(t,e,s,i){if(!s.has(i)){const r=e(),n=r[u];n.isPairTrait=!0,n.relation=t,n.pairTarget=i,s.set(i,r)}return s.get(i)}var tt=(t,e,s)=>{const r=t[u].entityTraits.get(s)||[],n=[];for(const o of r){const a=o[u];a.relation===e&&a.pairTarget!==M&&n.push(a.pairTarget)}return n},H=(t,e)=>{if(t===void 0)throw Error("Relation is undefined");if(e===void 0)throw Error("Relation target is undefined");e==="*"&&(e=M);const s=t[u],i=s.pairsMap,r=s.createTrait;return bt(t,r,i,e)},M=kt();function ae(){return{worldCursor:0,releasedWorldIds:[],maxWorlds:2**nt}}function ce(t){if(t.releasedWorldIds.length>0)return t.releasedWorldIds.pop();if(t.worldCursor>=t.maxWorlds)throw new Error(`Koota: Too many worlds created. The maximum is ${t.maxWorlds}.`);return t.worldCursor++}function le(t,e){if(e<0||e>=t.maxWorlds)throw new Error(`Invalid world ID: ${e}`);e===t.worldCursor-1?t.worldCursor--:e<t.worldCursor&&!t.releasedWorldIds.includes(e)&&t.releasedWorldIds.push(e)}var x={worlds:new Array(nt**2),cachedQueries:new Map,worldIndex:ae()},ot=class{constructor(t,e,s){this.type=t,this.id=e,this.traits=s,w(this,"traitIds"),this.traitIds=s.map(i=>i[u].id)}},de=3;function ue(){return de}function he(t,e){const s=t[u],i=structuredClone(s.entityMasks);s.trackingSnapshots.set(e,i),s.dirtyMasks.set(e,i.map(r=>r.map(()=>0))),s.changedMasks.set(e,i.map(r=>r.map(()=>0)))}function xt(t,e,s){const i=t[u];if(!e.has(s))return;i.traitData.has(s)||Q(t,s);const r=i.traitData.get(s);for(const n of i.changedMasks.values()){const o=I(e);n[o]||(n[o]=new Array);const a=s[u].id;n[o][a]=1}for(const n of r.queries){if(!n.hasChangedModifiers)continue;n.check(t,e,{type:"change",traitData:r})?n.add(e):n.remove(t,e)}for(const n of r.changedSubscriptions)n(e)}var ft=t=>({aliveCount:0,dense:[],sparse:[],maxId:0,worldId:t}),fe=t=>{if(t.aliveCount<t.dense.length){const i=Xt(t.dense[t.aliveCount]);return t.dense[t.aliveCount]=i,t.sparse[I(i)]=t.aliveCount,t.aliveCount++,i}const e=t.maxId++,s=Nt(t.worldId,0,e);return t.dense.push(s),t.sparse[e]=t.aliveCount,t.aliveCount++,s},ge=(t,e)=>{const s=I(e),i=t.sparse[s];if(i===void 0||i>=t.aliveCount)return;const r=t.aliveCount-1,n=t.dense[r],o=I(n);t.sparse[o]=i,t.dense[i]=n,t.sparse[s]=r,t.dense[r]=e,t.aliveCount--},pe=(t,e)=>{const s=t.sparse[I(e)];if(s===void 0||s>=t.aliveCount)return!1;const i=t.dense[s];return ut(e)===ut(i)&&Lt(e)===t.worldId},ye=t=>t.dense.slice(0,t.aliveCount);Number.prototype.add=function(...t){const e=this>>>P,s=x.worlds[e];return ie(s,this,...t)};Number.prototype.remove=function(...t){const e=this>>>P,s=x.worlds[e];return O(s,this,...t)};Number.prototype.has=function(t){const e=this>>>P,s=x.worlds[e];return ne(s,this,t)};Number.prototype.destroy=function(){const t=this>>>P,e=x.worlds[t];return st(e,this)};Number.prototype.changed=function(t){const e=this>>>P,s=x.worlds[e];return xt(s,this,t)};Number.prototype.get=function(t){const e=this>>>P,i=x.worlds[e][u],r=i.traitData.get(t);if(!r)return;const n=this&j;if((i.entityMasks[r.generationId][n]&r.bitflag)!==r.bitflag)return;const a=t[u],l=a.stores[e];return a.get(n,l)};Number.prototype.set=function(t,e,s=!0){const i=t[u],r=this&j,n=this>>>P,o=i.stores[n];e instanceof Function&&(e=e(i.get(r,o))),i.set(r,o,e),s&&xt(x.worlds[n],this,t)};Number.prototype.targetsFor=function(t){const e=this>>>P,s=x.worlds[e];return tt(s,t,this)};Number.prototype.targetFor=function(t){const e=this>>>P,s=x.worlds[e];return tt(s,t,this)[0]};Number.prototype.id=function(){return this&j};function et(t,...e){const s=t[u],i=fe(s.entityIndex);for(const r of s.notQueries)r.check(t,i)&&r.add(i),r.resetTrackingBitmasks(i.id());return s.entityTraits.set(i,new Set),i.add(...e),i}var me=new Set,ve=[];function st(t,e){const s=t[u];if(!t.has(e))throw new Error("Koota: The entity being destroyed does not exist.");const i=ve,r=me;for(i.length=0,i.push(e),r.clear();i.length>0;){const n=i.pop();if(r.has(n))continue;if(r.add(n),s.relationTargetEntities.has(n)){for(const l of t.query(M(n)))if(t.has(l))for(const h of s.entityTraits.get(l)){const g=h[u];if(!g.isPairTrait)continue;const T=g.relation[u];O(t,l,H(M,n)),g.pairTarget===n&&(O(t,l,h),T.autoRemoveTarget&&i.push(l))}}const o=s.entityTraits.get(n);if(o)for(const l of o)O(t,n,l);ge(s.entityIndex,n),s.entityTraits.delete(e);const a=I(n);for(let l=0;l<s.entityMasks.length;l++)s.entityMasks[l][a]=0}}var C,q,_,gt=class{constructor(){X(this,C,[]),X(this,q,[]),X(this,_,0)}has(t){const e=v(this,q)[t];return e<v(this,_)&&v(this,C)[e]===t}add(t){this.has(t)||(v(this,q)[t]=v(this,_),v(this,C)[dt(this,_)._++]=t)}remove(t){if(!this.has(t))return;const e=v(this,q)[t];dt(this,_)._--;const s=v(this,C)[v(this,_)];s!==t&&(v(this,C)[e]=s,v(this,q)[s]=e)}clear(){for(let t=0;t<v(this,_);t++)v(this,q)[v(this,C)[t]]=0;J(this,_,0)}sort(){v(this,C).sort((t,e)=>t-e);for(let t=0;t<v(this,C).length;t++)v(this,q)[v(this,C)[t]]=t}getIndex(t){return v(this,q)[t]}get dense(){return v(this,C).slice(0,v(this,_))}get sparse(){return v(this,q)}};C=new WeakMap;q=new WeakMap;_=new WeakMap;var G=new Float32Array(1024),K=t=>{G.fill(0);let e=0;for(let r=0;r<t.length;r++){const n=t[r];if(n instanceof ot){const o=n.id,a=n.traitIds;for(let l=0;l<a.length;l++){const h=a[l];G[e++]=o*1e5+h}}else{const o=n[u].id;G[e++]=o}}const s=G.subarray(0,e);return s.sort(),s.join(",")},rt=D(),z=class{constructor(t,e=[]){var r,n;w(this,"world"),w(this,"parameters"),w(this,"hash"),w(this,"traits",[]),w(this,"traitData",{required:[],forbidden:[],or:[],added:[],removed:[],changed:[],all:[]}),w(this,"bitmasks",[]),w(this,"generations"),w(this,"entities",new gt),w(this,"isTracking",!1),w(this,"hasChangedModifiers",!1),w(this,"changedTraits",new Set),w(this,"toRemove",new gt),w(this,"addSubscriptions",new Set),w(this,"removeSubscriptions",new Set),this.world=t,this.parameters=e;const s=t[u],i=[];for(let o=0;o<e.length;o++){const a=e[o];if(a instanceof ot){const l=a.traits;for(let h=0;h<l.length;h++){const g=l[h];s.traitData.has(g)||Q(t,g)}if(a.type==="not"&&this.traitData.forbidden.push(...l.map(h=>s.traitData.get(h))),a.type==="or"&&this.traitData.or.push(...l.map(h=>s.traitData.get(h))),a.type.includes("added")){for(const g of l){const T=s.traitData.get(g);this.traitData.added.push(T),this.traits.push(g)}this.isTracking=!0;const h=a.type.split("-")[1];i.push({type:"add",id:parseInt(h),traits:this.traitData.added})}if(a.type.includes("removed")){for(const g of l){const T=s.traitData.get(g);this.traitData.removed.push(T),this.traits.push(g)}this.isTracking=!0;const h=a.type.split("-")[1];i.push({type:"remove",id:parseInt(h),traits:this.traitData.removed})}if(a.type.includes("changed")){for(const g of l){this.changedTraits.add(g);const T=s.traitData.get(g);this.traitData.changed.push(T),this.traits.push(g),this.hasChangedModifiers=!0}this.isTracking=!0;const h=a.type.split("-")[1];i.push({type:"change",id:parseInt(h),traits:this.traitData.changed})}}else{const l=a;s.traitData.has(l)||Q(t,l),this.traitData.required.push(s.traitData.get(l)),this.traits.push(l)}}if(this.traitData.all=[...this.traitData.required,...this.traitData.forbidden,...this.traitData.or,...this.traitData.added,...this.traitData.removed,...this.traitData.changed],this.generations=this.traitData.all.map(o=>o.generationId).reduce((o,a)=>(o.includes(a)||o.push(a),o),[]),this.bitmasks=this.generations.map(o=>{const a=this.traitData.required.filter(c=>c.generationId===o).reduce((c,f)=>c|f.bitflag,0),l=this.traitData.forbidden.filter(c=>c.generationId===o).reduce((c,f)=>c|f.bitflag,0),h=this.traitData.or.filter(c=>c.generationId===o).reduce((c,f)=>c|f.bitflag,0),g=this.traitData.added.filter(c=>c.generationId===o).reduce((c,f)=>c|f.bitflag,0),T=this.traitData.removed.filter(c=>c.generationId===o).reduce((c,f)=>c|f.bitflag,0),y=this.traitData.changed.filter(c=>c.generationId===o).reduce((c,f)=>c|f.bitflag,0);return{required:a|g,forbidden:l,or:h,added:g,removed:T,changed:y,addedTracker:[],removedTracker:[],changedTracker:[]}}),this.hash=K(e),s.queries.add(this),s.queriesHashMap.set(this.hash,this),this.traitData.all.forEach(o=>{o.queries.add(this)}),this.traitData.forbidden.length>0&&s.notQueries.add(this),i.length>0)for(let o=0;o<i.length;o++){const a=i[o].type,l=i[o].id,h=i[o].traits,g=s.trackingSnapshots.get(l),T=s.dirtyMasks.get(l),y=s.changedMasks.get(l);for(const c of s.entityIndex.dense){let f=!0;const d=I(c);for(const S of h){const{generationId:m,bitflag:p}=S,b=((r=g[m])==null?void 0:r[d])||0,E=((n=s.entityMasks[m])==null?void 0:n[d])||0;let A=!1;switch(a){case"add":A=(b&p)===0&&(E&p)===p;break;case"remove":A=(b&p)===p&&(E&p)===0||(b&p)===0&&(E&p)===0&&(T[m][d]&p)===p;break;case"change":A=(y[m][d]&p)===p;break}if(!A){f=!1;break}}f&&this.add(c)}}else if(this.traitData.required.length>0||this.traitData.forbidden.length>0||this.traitData.or.length>0){const o=s.entityIndex.dense;for(let a=0;a<o.length;a++){const l=o[a];if(l.has(rt))continue;this.check(t,l)&&this.add(l)}}}run(t){this.commitRemovals(t);const e=this.entities.dense.slice();return this.isTracking&&this.entities.clear(),e}add(t){this.toRemove.remove(t),this.entities.add(t);for(const e of this.addSubscriptions)e(t)}remove(t,e){if(!this.entities.has(e)||this.toRemove.has(e))return;const s=t[u];this.toRemove.add(e),s.dirtyQueries.add(this);for(const i of this.removeSubscriptions)i(e)}check(t,e,s){const{bitmasks:i,generations:r}=this,n=t[u],o=I(e);if(this.traitData.all.length===0)return!1;for(let a=0;a<r.length;a++){const l=r[a],h=i[a],{required:g,forbidden:T,or:y,added:c,removed:f,changed:d}=h,S=n.entityMasks[l][o];if(!T&&!g&&!y&&!f&&!c&&!d)return!1;const m=s&&s.traitData.generationId===l;if(this.isTracking&&m){const p=s.traitData.bitflag;if(s.type==="add"){if(f&p)return!1;c&p&&(h.addedTracker[o]|=p)}else if(s.type==="remove"){if(c&p||(f&p&&(h.removedTracker[o]|=p),d&p))return!1}else if(s.type==="change"){if(!(S&p))return!1;d&p&&(h.changedTracker[o]|=p)}}if(S&T||(S&g)!==g||y!==0&&!(S&y)||c&&m&&((h.addedTracker[o]||0)&c)!==c||f&&m&&((h.removedTracker[o]||0)&f)!==f||d&&m&&((h.changedTracker[o]||0)&d)!==d)return!1}return!0}commitRemovals(t){const e=t[u];if(e.dirtyQueries.size){for(const s of e.dirtyQueries)for(let i=s.toRemove.dense.length-1;i>=0;i--){const r=s.toRemove.dense[i];s.toRemove.remove(r),s.entities.remove(r)}e.dirtyQueries.clear()}}resetTrackingBitmasks(t){for(const e of this.bitmasks)e.addedTracker[t]=0,e.removedTracker[t]=0,e.changedTracker[t]=0}};function pt(t,e){if(t===e)return!0;if(typeof t!="object"||t===null||typeof e!="object"||e===null)return!1;const s=Object.keys(t),i=Object.keys(e);if(s.length!==i.length)return!1;for(const r of s)if(!e.hasOwnProperty(r)||t[r]!==e[r])return!1;return!0}function Te(t,e,s){t.commitRemovals(e);const i=t.entities.dense.slice();t.isTracking&&t.entities.clear();const r=[],n=[];yt(s,n,r,e);const o=Object.assign(i,{updateEach(a,l={changeDetection:"auto"}){const h=new Array(n.length);if(l.changeDetection==="auto"){const g=[],T=[],y=[],c=[];for(let f=0;f<n.length;f++){const d=n[f],S=e[u].trackedTraits.has(d),m=t.hasChangedModifiers&&t.changedTraits.has(d);S||m?y.push(f):c.push(f)}for(let f=0;f<i.length;f++){const d=i[f],S=I(d);for(let m=0;m<n.length;m++){const b=n[m][u],E=b.get(S,r[m]);h[m]=E,T[m]=b.type==="aos"?{...E}:null}if(a(h,d,f),!!e.has(d)){for(let m=0;m<y.length;m++){const p=y[m],b=n[p],E=b[u],A=h[p],lt=r[p];let L=!1;E.type==="aos"?(L=E.fastSetWithChangeDetection(S,lt,A),L||(L=!pt(A,T[p]))):L=E.fastSetWithChangeDetection(S,lt,A),L&&g.push([d,b])}for(let m=0;m<c.length;m++){const p=c[m],E=n[p][u],A=r[p];E.fastSet(S,A,h[p])}}}for(let f=0;f<g.length;f++){const[d,S]=g[f];d.changed(S)}}else if(l.changeDetection==="always"){const g=[],T=[];for(let y=0;y<i.length;y++){const c=i[y],f=I(c);for(let d=0;d<n.length;d++){const m=n[d][u],p=m.get(f,r[d]);h[d]=p,T[d]=m.type==="aos"?{...p}:null}if(a(h,c,y),!!e.has(c))for(let d=0;d<n.length;d++){const S=n[d],m=S[u],p=h[d];let b=!1;m.type==="aos"?(b=m.fastSetWithChangeDetection(f,r[d],p),b||(b=!pt(p,T[d]))):b=m.fastSetWithChangeDetection(f,r[d],p),b&&g.push([c,S])}}for(let y=0;y<g.length;y++){const[c,f]=g[y];c.changed(f)}}else if(l.changeDetection==="never")for(let g=0;g<i.length;g++){const T=i[g],y=I(T);for(let c=0;c<n.length;c++){const d=n[c][u];h[c]=d.get(y,r[c])}if(a(h,T,g),!!e.has(T))for(let c=0;c<n.length;c++)n[c][u].fastSet(y,r[c],h[c])}return o},useStores(a){return a(r,i),o},select(...a){return n.length=0,r.length=0,yt(a,n,r,e),o}});return o}function yt(t,e,s,i){for(let r=0;r<t.length;r++){const n=t[r];if(n instanceof ot){if(n.type==="not")continue;const o=n.traits;for(const a of o)a[u].isTag||(e.push(a),s.push(ht(i,a)))}else{if(n[u].isTag)continue;e.push(n),s.push(ht(i,n))}}}var It,Y,V;It=u;var Se=class{constructor(...t){X(this,Y,ce(x.worldIndex)),w(this,It,{entityIndex:ft(v(this,Y)),entityMasks:[[]],entityTraits:new Map,bitflag:1,traitData:new Map,queries:new Set,queriesHashMap:new Map,notQueries:new Set,dirtyQueries:new Set,relationTargetEntities:new Set,dirtyMasks:new Map,trackingSnapshots:new Map,changedMasks:new Map,worldEntity:null,trackedTraits:new Set}),X(this,V,!1),w(this,"traits",new Set),this.init(...t)}get id(){return v(this,Y)}get isInitialized(){return v(this,V)}get entities(){return ye(this[u].entityIndex)}init(...t){const e=this[u];if(v(this,V))return;J(this,V,!0),x.worlds[v(this,Y)]=this;const s=ue();for(let i=0;i<s;i++)he(this,i);for(const[i,r]of x.cachedQueries){const n=new z(this,r);e.queriesHashMap.set(i,n)}e.worldEntity=et(this,rt,...t)}spawn(...t){return et(this,...t)}has(t){return typeof t=="number"?pe(this[u].entityIndex,t):this[u].worldEntity.has(t)}add(...t){this[u].worldEntity.add(...t)}remove(...t){this[u].worldEntity.remove(...t)}get(t){return this[u].worldEntity.get(t)}set(t,e){this[u].worldEntity.set(t,e)}destroy(){st(this,this[u].worldEntity),this[u].worldEntity=null,this.entities.forEach(t=>st(this,t)),this.reset(),J(this,V,!1),le(x.worldIndex,v(this,Y)),x.worlds.splice(x.worlds.indexOf(this),1)}reset(){const t=this[u];t.entityIndex=ft(v(this,Y)),t.entityTraits.clear(),t.notQueries.clear(),t.entityMasks=[[]],t.bitflag=1,t.traitData.clear(),this.traits.clear(),t.queries.clear(),t.queriesHashMap.clear(),t.dirtyQueries.clear(),t.relationTargetEntities.clear(),t.trackingSnapshots.clear(),t.dirtyMasks.clear(),t.changedMasks.clear(),t.trackedTraits.clear(),t.worldEntity=et(this,rt)}query(...t){const e=this[u];if(typeof t[0]=="string"){const s=e.queriesHashMap.get(t[0]);return s?s.run(this):[]}else{const s=t,i=K(s);let r=e.queriesHashMap.get(i);return r||(r=new z(this,s),e.queriesHashMap.set(i,r)),Te(r,this,s)}}queryFirst(...t){return this.query(...t)[0]}onAdd(t,e){const s=this[u],i=K(t);let r=s.queriesHashMap.get(i);return r||(r=new z(this,t),s.queriesHashMap.set(i,r)),r.addSubscriptions.add(e),()=>r.addSubscriptions.delete(e)}onRemove(t,e){const s=this[u],i=K(t);let r=s.queriesHashMap.get(i);return r||(r=new z(this,t),s.queriesHashMap.set(i,r)),r.removeSubscriptions.add(e),()=>r.removeSubscriptions.delete(e)}onChange(t,e){const s=this[u];s.traitData.has(t)||Q(this,t);const i=s.traitData.get(t);return i.changedSubscriptions.add(e),s.trackedTraits.add(t),()=>{i.changedSubscriptions.delete(e),s.trackedTraits.delete(t)}}};Y=new WeakMap;V=new WeakMap;function we(...t){return new Se(...t)}const it=oe({exclusive:!0}),Dt=D({posX:0,posY:0}),k=D({posX:0,posY:0}),R=D({xVel:0,yVel:0}),$=D({fillColor:"green",squareSize:0}),N=D({dir:"none"}),U=D({thrustVec:0}),F=D({isDestroyed:!1}),W=D({x:0,y:0,width:0,height:0}),at=D(),ct=D(),Et=D();function ke(t,e){t.query(k,R).updateEach(([s,i])=>{s.posX+=i.xVel*e.deltaTime,s.posY+=i.yVel*e.deltaTime})}function be(t){t.query(k,Dt,it("*")).updateEach(([e,s],i)=>{const n=i.targetFor(it).get(k);e.posX=n.posX+s.posX,e.posY=n.posY+s.posY})}function xe(t){const e=t.query(N,U,R,ct);e.select(N,U).updateEach(([i,r])=>{switch(i.dir){case"e":r.thrustVec=1;break;case"w":r.thrustVec=-1;break;case"none":r.thrustVec=0;break}});const s=1;e.select(U,R).updateEach(([i,r])=>{r.xVel=i.thrustVec*s})}function Ie(t,e){const s=t.query(k,at);for(const i of s){const r=i.get(k);let n=!1;for(const o of t.query(k,ct)){const a=o.get(k);if(r.posX>a.posX&&r.posY>a.posY){n=!0,e.callbackOnLoseCondition();break}}if(n)break}}function De(t,e){t.query(k,$).forEach(s=>{var o;if(!!((o=s.get(F))!=null&&o.isDestroyed))return;const r=s.get(k),n=s.get($);e.push(),e.fill(n.fillColor),e.square(r.posX,r.posY,n.squareSize),e.pop()})}function Ee(t){const e=t.query(at,k,W,F),s=t.query(Et,k,W,F);e.forEach(i=>{const r=i.get(W);s.forEach(n=>{var h;if(!!((h=n.get(F))!=null&&h.isDestroyed))return;const a=n.get(W);a.x<r.x+r.width&&a.x+a.width>r.x&&a.y<r.y+r.height&&a.y+a.height>r.y&&(n.set(F,{isDestroyed:!0}),i.set(F,{isDestroyed:!0}))})})}function Ce(t,e){t.query(k).forEach(s=>{const i=s.get(k);(i.posX<e.minX||i.posX>e.maxX||i.posY<e.minY||i.posY>e.maxY)&&s.destroy()})}function Me(t){t.query(F).forEach(e=>{const{isDestroyed:s}=e.get(F);s&&e.destroy()})}function Pe(t){t.query(k,W).select(k,W).updateEach(([e,s])=>{s.x=e.posX,s.y=e.posY})}function Ae(t,e){return t.spawn(k({posX:e.absolutePosition.x,posY:e.absolutePosition.y}),R({xVel:.01,yVel:0}))}function qe(t,e){return t.spawn(k({posX:e.absolutePosition.x,posY:e.absolutePosition.y}),$({fillColor:"green",squareSize:25}),at,it(e.followingTarget),Dt({posX:e.relativePosition.x,posY:e.relativePosition.y}),F({isDestroyed:!1}),W({x:e.absolutePosition.x,y:e.absolutePosition.y,height:25,width:25}))}function _e(t,e){return t.spawn(k({posX:e.absolutePosition.x,posY:e.absolutePosition.y}),ct,$({fillColor:"red",squareSize:50}),N,R,U({thrustVec:0}))}function Fe(t,e){return t.spawn(Et,R({yVel:-1}),k({posX:e.absolutePosition.x,posY:e.absolutePosition.y}),$({fillColor:"orange",squareSize:5}),F({isDestroyed:!1}),W({x:e.absolutePosition.x,y:e.absolutePosition.y,height:5,width:5}))}function Re(t,e,s){const i=t.get(k),r=t.get(R);i.posX>s?(t.set(R,{xVel:r.xVel*-1}),t.set(k,{posY:i.posY+50,posX:s})):i.posX<e&&(t.set(R,{xVel:r.xVel*-1}),t.set(k,{posY:i.posY+50,posX:e}))}function We(t){const e=we(),s=Ae(e,{absolutePosition:{x:t.width/-2+100,y:t.height/-2+100}}),i=s.get(k);for(let n=0;n<10;n++)for(let o=0;o<5;o++)qe(e,{absolutePosition:{x:i.posX+n*50,y:i.posY+o*50},relativePosition:{x:n*50,y:o*50},followingTarget:s});const r=_e(e,{absolutePosition:{x:0,y:t.height/2-100}});return{world:e,enemySwarmAnchorEntity:s,playerEntity:r}}function Ye(t,e){const s=We(t),i=new AbortController;document.addEventListener("keydown",function(o){}),document.addEventListener("keydown",function(o){switch(o.code){case"ArrowLeft":s.playerEntity.set(N,{dir:"w"});break;case"ArrowRight":s.playerEntity.set(N,{dir:"e"});break;case"Space":{const a=s.playerEntity.get(k);Fe(s.world,{absolutePosition:{x:a.posX,y:a.posY}})}break}},{signal:i.signal}),document.addEventListener("keyup",function(o){switch(o.code){case"ArrowLeft":case"ArrowRight":s.playerEntity.set(N,{dir:"none"});break}});function r(){i.abort()}const n={state:s,tick(){const o=this.state;Re(o.enemySwarmAnchorEntity,50-t.width/2,200-t.width/2),Ie(o.world,{callbackOnLoseCondition(){r(),e(o)}}),Ee(o.world),ke(o.world,{deltaTime:t.deltaTime}),be(o.world),xe(o.world),Ce(o.world,{minX:t.width/-2,maxX:t.width/2,minY:t.height/-2,maxY:t.height/2}),Me(o.world),Pe(o.world),Oe(o.world,t)}};return n.tick=n.tick.bind(n),n}function Oe(t,e){De(t,e)}const Ct=document.getElementById("p5-root");if(!Ct)throw new Error("Cannot find element root #p5-root");Ne(Ct);function Ve(t){let e=!1;function s(){console.log(r)}let i,r={sceneId:"START_NULL"};const n=[],o=a=>()=>{n.push(a)};Object.assign(t,{preload(){i=t.loadFont(new URL("/blog-assets/recurse-w2d4/space-invaders-demo/fonts/inconsolata.otf",import.meta.url).href)},setup(){document.addEventListener("keypress",function(a){a.code==="KeyP"?e=!e:a.code==="KeyD"&&s()}),t.frameRate(60),t.createCanvas(800,600,t.WEBGL),t.background("black"),t.textFont(i),t.textSize(36),t.textAlign(t.LEFT,t.BOTTOM),r={sceneId:"CRAWL_INTRO",simulation:Rt(t,o(()=>{r={sceneId:"SPACE_INVADERS_GAME",simulation:Ye(t,o(()=>{r={sceneId:"END"}}))}}))}},draw(){n.forEach(a=>a()),n.length=0,!e&&(t.background("black"),r.sceneId==="CRAWL_INTRO"?(r.simulation.tick(),Wt(t,r.simulation.state)):r.sceneId==="SPACE_INVADERS_GAME"?r.simulation.tick():r.sceneId==="END"&&(t.push(),t.textAlign("center","bottom"),t.fill([178,222,39,255]),t.text("GAME OVER",0,0),t.pop()))}})}function Ne(t){new qt(Ve,t)}
