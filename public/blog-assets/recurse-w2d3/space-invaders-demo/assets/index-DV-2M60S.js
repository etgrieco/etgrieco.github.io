import{r as Ct,g as At}from"./p5-DCs4u8N4.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function s(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(r){if(r.ep)return;r.ep=!0;const n=s(r);fetch(r.href,n)}})();var qt=Ct();const _t=At(qt);function Ft(t){return{introTextBoundary:{posY:t.textSize()},introTextPos:{posX:0,posY:t.height/2},pressToStartFill:{alpha:0,deltaVec:1},pressToStartPos:{posX:0,posY:t.height/2+t.textSize()}}}function Rt(t,e){const s=t.frameRate()*t.deltaTime*.001;return e.introTextPos.posY<=e.introTextBoundary.posY?t.frameCount%5===0&&(e.pressToStartFill.alpha<=.5?e.pressToStartFill.deltaVec=1:e.pressToStartFill.alpha>=1&&(e.pressToStartFill.deltaVec=-1),e.pressToStartFill.alpha+=e.pressToStartFill.deltaVec*.1):(e.introTextPos.posY-=s,e.pressToStartPos.posY-=s),e}function Pt(t,e){const s={state:Ft(t),tick(){return this.state=Rt(t,this.state),this.state}};s.tick=s.tick.bind(s);const i=new AbortController;document.addEventListener("keydown",function(n){n.code==="KeyS"&&(r(),e(s.state))},{signal:i.signal});function r(){i.abort()}return s}function Wt(t,e){t.push(),t.textAlign("center","bottom"),t.fill([178,222,39,255]),t.text("Welcome to Space Invaders!",e.introTextPos.posX,e.introTextPos.posY),t.pop(),t.push(),t.textAlign("center","bottom"),t.fill([178,222,39,e.pressToStartFill.alpha*255]),t.text("(press S to start)",e.pressToStartPos.posX,e.pressToStartPos.posY),t.pop()}var Yt=Object.defineProperty,Tt=t=>{throw TypeError(t)},Ot=(t,e,s)=>e in t?Yt(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s,S=(t,e,s)=>Ot(t,typeof e!="symbol"?e+"":e,s),wt=(t,e,s)=>e.has(t)||Tt("Cannot "+s),w=(t,e,s)=>(wt(t,e,"read from private field"),s?s.call(t):e.get(t)),L=(t,e,s)=>e.has(t)?Tt("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,s),U=(t,e,s,i)=>(wt(t,e,"write to private field"),e.set(t,s),s),lt=(t,e,s,i)=>({set _(r){U(t,e,r)},get _(){return w(t,e,i)}}),f=Symbol("internal"),ot=4,vt=8,St=20,Nt=(1<<ot)-1,J=(1<<vt)-1,B=(1<<St)-1,Q=St,q=Q+vt;function Vt(t,e,s){return(t&Nt)<<q|(e&J)<<Q|s&B}var b=t=>t&B,Xt=t=>t>>>q,ht=t=>t>>>Q&J,Lt=t=>t&-267386881|((t>>>Q&J)+1&J)<<Q,Qt=t=>{const e=t[f];e.bitflag*=2,e.bitflag>=2**31&&(e.bitflag=1,e.entityMasks.push(new Array))},Ht=class{constructor(t,e){S(this,"generationId"),S(this,"bitflag"),S(this,"trait"),S(this,"store"),S(this,"queries"),S(this,"notQueries"),S(this,"schema"),S(this,"changedSubscriptions");const s=t[f],i=e[f];this.generationId=s.entityMasks.length-1,this.bitflag=s.bitflag,this.trait=e,this.store=i.createStore(),this.queries=new Set,this.notQueries=new Set,this.schema=e.schema,this.changedSubscriptions=new Set,i.stores[t.id]=this.store}};function $t(t){const s=Object.keys(t).map(r=>`if ('${r}' in value) store.${r}[index] = value.${r};`).join(`
    `);return new Function("index","store","value",`
		${s}
	  `)}function Gt(t){const s=Object.keys(t).map(r=>`store.${r}[index] = value.${r};`).join(`
    `);return new Function("index","store","value",`
		${s}
	  `)}function Bt(t){const s=Object.keys(t).map(r=>`if (store.${r}[index] !== value.${r}) {
            store.${r}[index] = value.${r};
            changed = true;
        }`).join(`
    `);return new Function("index","store","value",`
        let changed = false;
        ${s}
        return changed;
        `)}function jt(t){const s=`{ ${Object.keys(t).map(r=>`${r}: store.${r}[index]`).join(", ")} }`;return new Function("index","store",`
        return ${s};
        `)}function kt(t){return(e,s,i)=>{s[e]=i}}function Kt(t){return(e,s,i)=>{let r=!1;return i!==s[e]&&(s[e]=i,r=!0),r}}function zt(t){return(e,s)=>s[e]}var Ut={soa:$t,aos:kt},Jt={soa:Gt,aos:kt},Zt={soa:Bt,aos:Kt},te={soa:jt,aos:zt};function ee(t){if(typeof t=="function")return[];{const e={};for(const s in t)e[s]=[];return e}}var se=0;function re(t={}){const e=typeof t=="function",s=e?"aos":"soa",i=Object.assign(function(r){return[i,r]},{schema:t,[f]:{set:Ut[s](t),fastSet:Jt[s](t),fastSetWithChangeDetection:Zt[s](t),get:te[s](t),stores:[],id:se++,createStore:()=>ee(t),isPairTrait:!1,relation:null,pairTarget:null,isTag:!e&&Object.keys(t).length===0,type:s}});return i}var M=re;function H(t,e){const s=t[f],i=new Ht(t,e);s.traitData.set(e,i),t.traits.add(e),Qt(t)}function ie(t,e,...s){const i=t[f];for(let r=0;r<s.length;r++){let n,a;if(Array.isArray(s[r])?[n,a]=s[r]:n=s[r],e.has(n))return;const o=n[f];i.traitData.has(n)||H(t,n);const u=i.traitData.get(n),{generationId:d,bitflag:l,queries:y}=u,m=b(e);i.entityMasks[d][m]|=l;for(const h of i.dirtyMasks.values())h[d]||(h[d]=[]),h[d][m]|=l;for(const h of y)h.toRemove.remove(e),h.check(t,e,{type:"add",traitData:u})?h.add(e):h.remove(t,e);i.entityTraits.get(e).add(n);const c=o.relation,g=o.pairTarget;if(o.isPairTrait&&c!==null&&g!==null&&(i.relationTargetEntities.add(g),e.add($(A,g)),e.add($(c,A)),c[f].exclusive===!0&&g!==A)){const h=Z(t,c,e)[0];h!=null&&h!==g&&O(t,e,c(h))}if(o.type==="soa"){const h={};for(const v in u.schema)typeof u.schema[v]=="function"?h[v]=u.schema[v]():h[v]=u.schema[v];e.set(n,{...h,...a},!1)}else{const h=a??u.schema();e.set(n,h,!1)}}}function O(t,e,...s){const i=t[f];for(let r=0;r<s.length;r++){const n=s[r],a=n[f];if(!e.has(n))return;const o=i.traitData.get(n),{generationId:u,bitflag:d,queries:l}=o,y=b(e);i.entityMasks[u][y]&=~d;for(const m of i.dirtyMasks.values())m[u][y]|=d;for(const m of l)m.check(t,e,{type:"remove",traitData:o})?m.add(e):m.remove(t,e);if(i.entityTraits.get(e).delete(n),a.isPairTrait){t.query(A(e)).length===0&&i.relationTargetEntities.delete(e);const m=a.pairTarget;O(t,e,$(A,m));const c=a.relation;Z(t,c,e).length===0&&O(t,e,$(c,A))}}}function ne(t,e,s){const i=t[f],r=i.traitData.get(s);if(!r)return!1;const{generationId:n,bitflag:a}=r,o=b(e);return(i.entityMasks[n][o]&a)===a}function ut(t,e){return t[f].traitData.get(e).store}function It(t){const e=new Map,s=()=>M((t==null?void 0:t.store)??{});function i(r){if(r===void 0)throw Error("Relation target is undefined");return r==="*"&&(r=A),Et(i,s,e,r)}return Object.assign(i,{[f]:{pairsMap:e,createTrait:s,exclusive:(t==null?void 0:t.exclusive)??!1,autoRemoveTarget:(t==null?void 0:t.autoRemoveTarget)??!1}})}var ae=It;function Et(t,e,s,i){if(!s.has(i)){const r=e(),n=r[f];n.isPairTrait=!0,n.relation=t,n.pairTarget=i,s.set(i,r)}return s.get(i)}var Z=(t,e,s)=>{const r=t[f].entityTraits.get(s)||[],n=[];for(const a of r){const o=a[f];o.relation===e&&o.pairTarget!==A&&n.push(o.pairTarget)}return n},$=(t,e)=>{if(t===void 0)throw Error("Relation is undefined");if(e===void 0)throw Error("Relation target is undefined");e==="*"&&(e=A);const s=t[f],i=s.pairsMap,r=s.createTrait;return Et(t,r,i,e)},A=It();function oe(){return{worldCursor:0,releasedWorldIds:[],maxWorlds:2**ot}}function ce(t){if(t.releasedWorldIds.length>0)return t.releasedWorldIds.pop();if(t.worldCursor>=t.maxWorlds)throw new Error(`Koota: Too many worlds created. The maximum is ${t.maxWorlds}.`);return t.worldCursor++}function de(t,e){if(e<0||e>=t.maxWorlds)throw new Error(`Invalid world ID: ${e}`);e===t.worldCursor-1?t.worldCursor--:e<t.worldCursor&&!t.releasedWorldIds.includes(e)&&t.releasedWorldIds.push(e)}var E={worlds:new Array(ot**2),cachedQueries:new Map,worldIndex:oe()},ct=class{constructor(t,e,s){this.type=t,this.id=e,this.traits=s,S(this,"traitIds"),this.traitIds=s.map(i=>i[f].id)}},le=3;function he(){return le}function ue(t,e){const s=t[f],i=structuredClone(s.entityMasks);s.trackingSnapshots.set(e,i),s.dirtyMasks.set(e,i.map(r=>r.map(()=>0))),s.changedMasks.set(e,i.map(r=>r.map(()=>0)))}function Dt(t,e,s){const i=t[f];if(!e.has(s))return;i.traitData.has(s)||H(t,s);const r=i.traitData.get(s);for(const n of i.changedMasks.values()){const a=b(e);n[a]||(n[a]=new Array);const o=s[f].id;n[a][o]=1}for(const n of r.queries){if(!n.hasChangedModifiers)continue;n.check(t,e,{type:"change",traitData:r})?n.add(e):n.remove(t,e)}for(const n of r.changedSubscriptions)n(e)}var ft=t=>({aliveCount:0,dense:[],sparse:[],maxId:0,worldId:t}),fe=t=>{if(t.aliveCount<t.dense.length){const i=Lt(t.dense[t.aliveCount]);return t.dense[t.aliveCount]=i,t.sparse[b(i)]=t.aliveCount,t.aliveCount++,i}const e=t.maxId++,s=Vt(t.worldId,0,e);return t.dense.push(s),t.sparse[e]=t.aliveCount,t.aliveCount++,s},ge=(t,e)=>{const s=b(e),i=t.sparse[s];if(i===void 0||i>=t.aliveCount)return;const r=t.aliveCount-1,n=t.dense[r],a=b(n);t.sparse[a]=i,t.dense[i]=n,t.sparse[s]=r,t.dense[r]=e,t.aliveCount--},pe=(t,e)=>{const s=t.sparse[b(e)];if(s===void 0||s>=t.aliveCount)return!1;const i=t.dense[s];return ht(e)===ht(i)&&Xt(e)===t.worldId},ye=t=>t.dense.slice(0,t.aliveCount);Number.prototype.add=function(...t){const e=this>>>q,s=E.worlds[e];return ie(s,this,...t)};Number.prototype.remove=function(...t){const e=this>>>q,s=E.worlds[e];return O(s,this,...t)};Number.prototype.has=function(t){const e=this>>>q,s=E.worlds[e];return ne(s,this,t)};Number.prototype.destroy=function(){const t=this>>>q,e=E.worlds[t];return et(e,this)};Number.prototype.changed=function(t){const e=this>>>q,s=E.worlds[e];return Dt(s,this,t)};Number.prototype.get=function(t){const e=this>>>q,i=E.worlds[e][f],r=i.traitData.get(t);if(!r)return;const n=this&B;if((i.entityMasks[r.generationId][n]&r.bitflag)!==r.bitflag)return;const o=t[f],u=o.stores[e];return o.get(n,u)};Number.prototype.set=function(t,e,s=!0){const i=t[f],r=this&B,n=this>>>q,a=i.stores[n];e instanceof Function&&(e=e(i.get(r,a))),i.set(r,a,e),s&&Dt(E.worlds[n],this,t)};Number.prototype.targetsFor=function(t){const e=this>>>q,s=E.worlds[e];return Z(s,t,this)};Number.prototype.targetFor=function(t){const e=this>>>q,s=E.worlds[e];return Z(s,t,this)[0]};Number.prototype.id=function(){return this&B};function tt(t,...e){const s=t[f],i=fe(s.entityIndex);for(const r of s.notQueries)r.check(t,i)&&r.add(i),r.resetTrackingBitmasks(i.id());return s.entityTraits.set(i,new Set),i.add(...e),i}var me=new Set,Te=[];function et(t,e){const s=t[f];if(!t.has(e))throw new Error("Koota: The entity being destroyed does not exist.");const i=Te,r=me;for(i.length=0,i.push(e),r.clear();i.length>0;){const n=i.pop();if(r.has(n))continue;if(r.add(n),s.relationTargetEntities.has(n)){for(const u of t.query(A(n)))if(t.has(u))for(const d of s.entityTraits.get(u)){const l=d[f];if(!l.isPairTrait)continue;const y=l.relation[f];O(t,u,$(A,n)),l.pairTarget===n&&(O(t,u,d),y.autoRemoveTarget&&i.push(u))}}const a=s.entityTraits.get(n);if(a)for(const u of a)O(t,n,u);ge(s.entityIndex,n),s.entityTraits.delete(e);const o=b(n);for(let u=0;u<s.entityMasks.length;u++)s.entityMasks[u][o]=0}}var C,F,R,gt=class{constructor(){L(this,C,[]),L(this,F,[]),L(this,R,0)}has(t){const e=w(this,F)[t];return e<w(this,R)&&w(this,C)[e]===t}add(t){this.has(t)||(w(this,F)[t]=w(this,R),w(this,C)[lt(this,R)._++]=t)}remove(t){if(!this.has(t))return;const e=w(this,F)[t];lt(this,R)._--;const s=w(this,C)[w(this,R)];s!==t&&(w(this,C)[e]=s,w(this,F)[s]=e)}clear(){for(let t=0;t<w(this,R);t++)w(this,F)[w(this,C)[t]]=0;U(this,R,0)}sort(){w(this,C).sort((t,e)=>t-e);for(let t=0;t<w(this,C).length;t++)w(this,F)[w(this,C)[t]]=t}getIndex(t){return w(this,F)[t]}get dense(){return w(this,C).slice(0,w(this,R))}get sparse(){return w(this,F)}};C=new WeakMap;F=new WeakMap;R=new WeakMap;var j=new Float32Array(1024),z=t=>{j.fill(0);let e=0;for(let r=0;r<t.length;r++){const n=t[r];if(n instanceof ct){const a=n.id,o=n.traitIds;for(let u=0;u<o.length;u++){const d=o[u];j[e++]=a*1e5+d}}else{const a=n[f].id;j[e++]=a}}const s=j.subarray(0,e);return s.sort(),s.join(",")},st=M(),K=class{constructor(t,e=[]){var r,n;S(this,"world"),S(this,"parameters"),S(this,"hash"),S(this,"traits",[]),S(this,"traitData",{required:[],forbidden:[],or:[],added:[],removed:[],changed:[],all:[]}),S(this,"bitmasks",[]),S(this,"generations"),S(this,"entities",new gt),S(this,"isTracking",!1),S(this,"hasChangedModifiers",!1),S(this,"changedTraits",new Set),S(this,"toRemove",new gt),S(this,"addSubscriptions",new Set),S(this,"removeSubscriptions",new Set),this.world=t,this.parameters=e;const s=t[f],i=[];for(let a=0;a<e.length;a++){const o=e[a];if(o instanceof ct){const u=o.traits;for(let d=0;d<u.length;d++){const l=u[d];s.traitData.has(l)||H(t,l)}if(o.type==="not"&&this.traitData.forbidden.push(...u.map(d=>s.traitData.get(d))),o.type==="or"&&this.traitData.or.push(...u.map(d=>s.traitData.get(d))),o.type.includes("added")){for(const l of u){const y=s.traitData.get(l);this.traitData.added.push(y),this.traits.push(l)}this.isTracking=!0;const d=o.type.split("-")[1];i.push({type:"add",id:parseInt(d),traits:this.traitData.added})}if(o.type.includes("removed")){for(const l of u){const y=s.traitData.get(l);this.traitData.removed.push(y),this.traits.push(l)}this.isTracking=!0;const d=o.type.split("-")[1];i.push({type:"remove",id:parseInt(d),traits:this.traitData.removed})}if(o.type.includes("changed")){for(const l of u){this.changedTraits.add(l);const y=s.traitData.get(l);this.traitData.changed.push(y),this.traits.push(l),this.hasChangedModifiers=!0}this.isTracking=!0;const d=o.type.split("-")[1];i.push({type:"change",id:parseInt(d),traits:this.traitData.changed})}}else{const u=o;s.traitData.has(u)||H(t,u),this.traitData.required.push(s.traitData.get(u)),this.traits.push(u)}}if(this.traitData.all=[...this.traitData.required,...this.traitData.forbidden,...this.traitData.or,...this.traitData.added,...this.traitData.removed,...this.traitData.changed],this.generations=this.traitData.all.map(a=>a.generationId).reduce((a,o)=>(a.includes(o)||a.push(o),a),[]),this.bitmasks=this.generations.map(a=>{const o=this.traitData.required.filter(c=>c.generationId===a).reduce((c,g)=>c|g.bitflag,0),u=this.traitData.forbidden.filter(c=>c.generationId===a).reduce((c,g)=>c|g.bitflag,0),d=this.traitData.or.filter(c=>c.generationId===a).reduce((c,g)=>c|g.bitflag,0),l=this.traitData.added.filter(c=>c.generationId===a).reduce((c,g)=>c|g.bitflag,0),y=this.traitData.removed.filter(c=>c.generationId===a).reduce((c,g)=>c|g.bitflag,0),m=this.traitData.changed.filter(c=>c.generationId===a).reduce((c,g)=>c|g.bitflag,0);return{required:o|l,forbidden:u,or:d,added:l,removed:y,changed:m,addedTracker:[],removedTracker:[],changedTracker:[]}}),this.hash=z(e),s.queries.add(this),s.queriesHashMap.set(this.hash,this),this.traitData.all.forEach(a=>{a.queries.add(this)}),this.traitData.forbidden.length>0&&s.notQueries.add(this),i.length>0)for(let a=0;a<i.length;a++){const o=i[a].type,u=i[a].id,d=i[a].traits,l=s.trackingSnapshots.get(u),y=s.dirtyMasks.get(u),m=s.changedMasks.get(u);for(const c of s.entityIndex.dense){let g=!0;const h=b(c);for(const v of d){const{generationId:T,bitflag:p}=v,I=((r=l[T])==null?void 0:r[h])||0,x=((n=s.entityMasks[T])==null?void 0:n[h])||0;let _=!1;switch(o){case"add":_=(I&p)===0&&(x&p)===p;break;case"remove":_=(I&p)===p&&(x&p)===0||(I&p)===0&&(x&p)===0&&(y[T][h]&p)===p;break;case"change":_=(m[T][h]&p)===p;break}if(!_){g=!1;break}}g&&this.add(c)}}else if(this.traitData.required.length>0||this.traitData.forbidden.length>0||this.traitData.or.length>0){const a=s.entityIndex.dense;for(let o=0;o<a.length;o++){const u=a[o];if(u.has(st))continue;this.check(t,u)&&this.add(u)}}}run(t){this.commitRemovals(t);const e=this.entities.dense.slice();return this.isTracking&&this.entities.clear(),e}add(t){this.toRemove.remove(t),this.entities.add(t);for(const e of this.addSubscriptions)e(t)}remove(t,e){if(!this.entities.has(e)||this.toRemove.has(e))return;const s=t[f];this.toRemove.add(e),s.dirtyQueries.add(this);for(const i of this.removeSubscriptions)i(e)}check(t,e,s){const{bitmasks:i,generations:r}=this,n=t[f],a=b(e);if(this.traitData.all.length===0)return!1;for(let o=0;o<r.length;o++){const u=r[o],d=i[o],{required:l,forbidden:y,or:m,added:c,removed:g,changed:h}=d,v=n.entityMasks[u][a];if(!y&&!l&&!m&&!g&&!c&&!h)return!1;const T=s&&s.traitData.generationId===u;if(this.isTracking&&T){const p=s.traitData.bitflag;if(s.type==="add"){if(g&p)return!1;c&p&&(d.addedTracker[a]|=p)}else if(s.type==="remove"){if(c&p||(g&p&&(d.removedTracker[a]|=p),h&p))return!1}else if(s.type==="change"){if(!(v&p))return!1;h&p&&(d.changedTracker[a]|=p)}}if(v&y||(v&l)!==l||m!==0&&!(v&m)||c&&T&&((d.addedTracker[a]||0)&c)!==c||g&&T&&((d.removedTracker[a]||0)&g)!==g||h&&T&&((d.changedTracker[a]||0)&h)!==h)return!1}return!0}commitRemovals(t){const e=t[f];if(e.dirtyQueries.size){for(const s of e.dirtyQueries)for(let i=s.toRemove.dense.length-1;i>=0;i--){const r=s.toRemove.dense[i];s.toRemove.remove(r),s.entities.remove(r)}e.dirtyQueries.clear()}}resetTrackingBitmasks(t){for(const e of this.bitmasks)e.addedTracker[t]=0,e.removedTracker[t]=0,e.changedTracker[t]=0}};function pt(t,e){if(t===e)return!0;if(typeof t!="object"||t===null||typeof e!="object"||e===null)return!1;const s=Object.keys(t),i=Object.keys(e);if(s.length!==i.length)return!1;for(const r of s)if(!e.hasOwnProperty(r)||t[r]!==e[r])return!1;return!0}function we(t,e,s){t.commitRemovals(e);const i=t.entities.dense.slice();t.isTracking&&t.entities.clear();const r=[],n=[];yt(s,n,r,e);const a=Object.assign(i,{updateEach(o,u={changeDetection:"auto"}){const d=new Array(n.length);if(u.changeDetection==="auto"){const l=[],y=[],m=[],c=[];for(let g=0;g<n.length;g++){const h=n[g],v=e[f].trackedTraits.has(h),T=t.hasChangedModifiers&&t.changedTraits.has(h);v||T?m.push(g):c.push(g)}for(let g=0;g<i.length;g++){const h=i[g],v=b(h);for(let T=0;T<n.length;T++){const I=n[T][f],x=I.get(v,r[T]);d[T]=x,y[T]=I.type==="aos"?{...x}:null}if(o(d,h,g),!!e.has(h)){for(let T=0;T<m.length;T++){const p=m[T],I=n[p],x=I[f],_=d[p],dt=r[p];let X=!1;x.type==="aos"?(X=x.fastSetWithChangeDetection(v,dt,_),X||(X=!pt(_,y[p]))):X=x.fastSetWithChangeDetection(v,dt,_),X&&l.push([h,I])}for(let T=0;T<c.length;T++){const p=c[T],x=n[p][f],_=r[p];x.fastSet(v,_,d[p])}}}for(let g=0;g<l.length;g++){const[h,v]=l[g];h.changed(v)}}else if(u.changeDetection==="always"){const l=[],y=[];for(let m=0;m<i.length;m++){const c=i[m],g=b(c);for(let h=0;h<n.length;h++){const T=n[h][f],p=T.get(g,r[h]);d[h]=p,y[h]=T.type==="aos"?{...p}:null}if(o(d,c,m),!!e.has(c))for(let h=0;h<n.length;h++){const v=n[h],T=v[f],p=d[h];let I=!1;T.type==="aos"?(I=T.fastSetWithChangeDetection(g,r[h],p),I||(I=!pt(p,y[h]))):I=T.fastSetWithChangeDetection(g,r[h],p),I&&l.push([c,v])}}for(let m=0;m<l.length;m++){const[c,g]=l[m];c.changed(g)}}else if(u.changeDetection==="never")for(let l=0;l<i.length;l++){const y=i[l],m=b(y);for(let c=0;c<n.length;c++){const h=n[c][f];d[c]=h.get(m,r[c])}if(o(d,y,l),!!e.has(y))for(let c=0;c<n.length;c++)n[c][f].fastSet(m,r[c],d[c])}return a},useStores(o){return o(r,i),a},select(...o){return n.length=0,r.length=0,yt(o,n,r,e),a}});return a}function yt(t,e,s,i){for(let r=0;r<t.length;r++){const n=t[r];if(n instanceof ct){if(n.type==="not")continue;const a=n.traits;for(const o of a)o[f].isTag||(e.push(o),s.push(ut(i,o)))}else{if(n[f].isTag)continue;e.push(n),s.push(ut(i,n))}}}var bt,Y,N;bt=f;var ve=class{constructor(...t){L(this,Y,ce(E.worldIndex)),S(this,bt,{entityIndex:ft(w(this,Y)),entityMasks:[[]],entityTraits:new Map,bitflag:1,traitData:new Map,queries:new Set,queriesHashMap:new Map,notQueries:new Set,dirtyQueries:new Set,relationTargetEntities:new Set,dirtyMasks:new Map,trackingSnapshots:new Map,changedMasks:new Map,worldEntity:null,trackedTraits:new Set}),L(this,N,!1),S(this,"traits",new Set),this.init(...t)}get id(){return w(this,Y)}get isInitialized(){return w(this,N)}get entities(){return ye(this[f].entityIndex)}init(...t){const e=this[f];if(w(this,N))return;U(this,N,!0),E.worlds[w(this,Y)]=this;const s=he();for(let i=0;i<s;i++)ue(this,i);for(const[i,r]of E.cachedQueries){const n=new K(this,r);e.queriesHashMap.set(i,n)}e.worldEntity=tt(this,st,...t)}spawn(...t){return tt(this,...t)}has(t){return typeof t=="number"?pe(this[f].entityIndex,t):this[f].worldEntity.has(t)}add(...t){this[f].worldEntity.add(...t)}remove(...t){this[f].worldEntity.remove(...t)}get(t){return this[f].worldEntity.get(t)}set(t,e){this[f].worldEntity.set(t,e)}destroy(){et(this,this[f].worldEntity),this[f].worldEntity=null,this.entities.forEach(t=>et(this,t)),this.reset(),U(this,N,!1),de(E.worldIndex,w(this,Y)),E.worlds.splice(E.worlds.indexOf(this),1)}reset(){const t=this[f];t.entityIndex=ft(w(this,Y)),t.entityTraits.clear(),t.notQueries.clear(),t.entityMasks=[[]],t.bitflag=1,t.traitData.clear(),this.traits.clear(),t.queries.clear(),t.queriesHashMap.clear(),t.dirtyQueries.clear(),t.relationTargetEntities.clear(),t.trackingSnapshots.clear(),t.dirtyMasks.clear(),t.changedMasks.clear(),t.trackedTraits.clear(),t.worldEntity=tt(this,st)}query(...t){const e=this[f];if(typeof t[0]=="string"){const s=e.queriesHashMap.get(t[0]);return s?s.run(this):[]}else{const s=t,i=z(s);let r=e.queriesHashMap.get(i);return r||(r=new K(this,s),e.queriesHashMap.set(i,r)),we(r,this,s)}}queryFirst(...t){return this.query(...t)[0]}onAdd(t,e){const s=this[f],i=z(t);let r=s.queriesHashMap.get(i);return r||(r=new K(this,t),s.queriesHashMap.set(i,r)),r.addSubscriptions.add(e),()=>r.addSubscriptions.delete(e)}onRemove(t,e){const s=this[f],i=z(t);let r=s.queriesHashMap.get(i);return r||(r=new K(this,t),s.queriesHashMap.set(i,r)),r.removeSubscriptions.add(e),()=>r.removeSubscriptions.delete(e)}onChange(t,e){const s=this[f];s.traitData.has(t)||H(this,t);const i=s.traitData.get(t);return i.changedSubscriptions.add(e),s.trackedTraits.add(t),()=>{i.changedSubscriptions.delete(e),s.trackedTraits.delete(t)}}};Y=new WeakMap;N=new WeakMap;function Se(...t){return new ve(...t)}const rt=ae({exclusive:!0}),k=M({posX:0,posY:0}),W=M({xVel:0,yVel:0}),G=M({fillColor:"green",squareSize:0}),V=M({dir:"none"}),it=M({absThrust:0}),xt=M({posX:0,posY:0}),P=M({isDestroyed:!1}),nt=M(),at=M(),mt=M();function ke(t){const e=Se(),i=e.spawn(k({posX:t.width/-2+100,posY:t.height/-2+100}),W({xVel:.01,yVel:0})),r=D(i.get(k));for(let a=0;a<10;a++)for(let o=0;o<5;o++)e.spawn(k({posX:r.posX+a*50,posY:r.posY+o*50}),G({fillColor:"green",squareSize:25}),nt,rt(i),xt({posX:a*50,posY:o*50}),P({isDestroyed:!1}));const n=e.spawn(k({posX:0,posY:t.height/2-100}),at,G({fillColor:"red",squareSize:50}),V,W,it({absThrust:1}));return{world:e,enemySwarmAnchorEntity:i,playerEntity:n}}function Ie(t,e){const s=ke(t),i=new AbortController;document.addEventListener("keydown",function(a){switch(a.code){case"ArrowLeft":s.playerEntity.set(V,{dir:"w"});break;case"ArrowRight":s.playerEntity.set(V,{dir:"e"});break;case"Space":{const o=D(s.playerEntity.get(k));s.world.spawn(mt,W({yVel:-1}),k({posX:o.posX,posY:o.posY}),G({fillColor:"orange",squareSize:5}),P({isDestroyed:!1}))}break}},{signal:i.signal}),document.addEventListener("keyup",function(a){switch(a.code){case"ArrowLeft":case"ArrowRight":s.playerEntity.set(V,{dir:"none"});break}});function r(){i.abort()}const n={state:s,tick(){const a=D(this.state.enemySwarmAnchorEntity.get(k)),o=D(this.state.enemySwarmAnchorEntity.get(W));a.posX>200-t.width/2?(this.state.enemySwarmAnchorEntity.set(W,{xVel:o.xVel*-1}),this.state.enemySwarmAnchorEntity.set(k,{posY:a.posY+50,posX:200-t.width/2})):a.posX<50-t.width/2&&(this.state.enemySwarmAnchorEntity.set(W,{xVel:o.xVel*-1}),this.state.enemySwarmAnchorEntity.set(k,{posY:a.posY+50,posX:50-t.width/2})),this.state.world.query(k,W).updateEach(([d,l])=>{d.posX+=l.xVel*t.deltaTime,d.posY+=l.yVel*t.deltaTime}),this.state.world.query(k,xt,rt("*")).updateEach(([d,l],y)=>{const m=D(y.targetFor(rt)),c=D(m.get(k));d.posX=c.posX+l.posX,d.posY=c.posY+l.posY}),this.state.world.query(V,it,W,at).select(V,it,W).updateEach(([d,l,y])=>{if(d.dir==="e")y.xVel=l.absThrust;else if(d.dir==="w")y.xVel=-1*l.absThrust;else if(d.dir==="none")y.xVel=0;else throw new Error(`Unhandled controller condition ${d.dir}`)});const u=this.state.world.query(k,nt);for(const d of u){const l=D(d.get(k));let y=!1;for(const m of this.state.world.query(k,at)){const c=D(m.get(k));if(l.posX>c.posX&&l.posY>c.posY){y=!0,r(),e(this.state);break}}if(y)break}this.state.world.query(nt,k,P).forEach(d=>{const l=D(d.get(k));this.state.world.query(mt,k,P).forEach(y=>{var p;if(!!((p=y.get(P))!=null&&p.isDestroyed))return;const c=D(y.get(k)),g=l.posX-c.posX,h=l.posY-c.posY,v=g<=10&&g>0,T=h>=-10&&h<0;v&&T&&(y.set(P,{isDestroyed:!0}),d.set(P,{isDestroyed:!0}))})}),t.frameCount%10===0&&(this.state.world.query(k).forEach(d=>{const l=D(d.get(k));(l.posX<t.width/-2||l.posX>t.width/2||l.posY<t.height/-2||l.posY>t.height/2)&&d.destroy()}),this.state.world.query(P).forEach(d=>{const{isDestroyed:l}=D(d.get(P));l&&d.destroy()})),Ee(t,this.state)}};return n.tick=n.tick.bind(n),n}function Ee(t,e){De(t,e.world)}function De(t,e){e.query(k,G).forEach(s=>{var a;if(!!((a=s.get(P))!=null&&a.isDestroyed))return;const r=D(s.get(k)),n=D(s.get(G));t.push(),t.fill(n.fillColor),t.square(r.posX,r.posY,n.squareSize),t.pop()})}function D(t){if(t==null)throw new Error("Array contains null or undefined values");return t}const Mt=document.getElementById("p5-root");if(!Mt)throw new Error("Cannot find element root #p5-root");xe(Mt);function be(t){let e=!1;function s(){console.log(r)}let i,r={sceneId:"START_NULL"};const n=[],a=o=>()=>{n.push(o)};Object.assign(t,{preload(){i=t.loadFont(new URL("/blog-assets/recurse-w2d3/space-invaders-demo/fonts/inconsolata.otf",import.meta.url).href)},setup(){document.addEventListener("keypress",function(o){o.code==="KeyP"?e=!e:o.code==="KeyD"&&s()}),t.frameRate(60),t.createCanvas(800,600,t.WEBGL),t.background("black"),t.textFont(i),t.textSize(36),t.textAlign(t.LEFT,t.BOTTOM),r={sceneId:"CRAWL_INTRO",simulation:Pt(t,a(()=>{r={sceneId:"SPACE_INVADERS_GAME",simulation:Ie(t,a(()=>{r={sceneId:"END"}}))}}))}},draw(){n.forEach(o=>o()),n.length=0,!e&&(t.background("black"),r.sceneId==="CRAWL_INTRO"?(r.simulation.tick(),Wt(t,r.simulation.state)):r.sceneId==="SPACE_INVADERS_GAME"?r.simulation.tick():r.sceneId==="END"&&(t.push(),t.textAlign("center","bottom"),t.fill([178,222,39,255]),t.text("GAME OVER",0,0),t.pop()))}})}function xe(t){new _t(be,t)}
